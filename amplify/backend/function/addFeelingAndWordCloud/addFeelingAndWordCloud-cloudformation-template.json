{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda Function resource stack creation using Amplify CLI",
    "Parameters": {
        "CloudWatchRule": {
            "Type": "String",
            "Default" : "NONE",
            "Description" : " Schedule Expression"
        },
        "deploymentBucketName": {
            "Type": "String"
        },
        "env": {
            "Type": "String"
        },
        "s3Key": {
            "Type": "String"
        }
        ,
    
    
    
        "storagereviewsName": {
            "Type": "String",
            "Default": "storagereviewsName"
            },
        
        "storagereviewsArn": {
            "Type": "String",
            "Default": "storagereviewsArn"
            },
        
        "storagereviewsStreamArn": {
            "Type": "String",
            "Default": "storagereviewsStreamArn"
            },
        
    
        
    
        "storagerestaurantsName": {
            "Type": "String",
            "Default": "storagerestaurantsName"
            },
        
        "storagerestaurantsArn": {
            "Type": "String",
            "Default": "storagerestaurantsArn"
            },
        
        "storagerestaurantsStreamArn": {
            "Type": "String",
            "Default": "storagerestaurantsStreamArn"
            }
        
    
        
    
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Metadata": {
            "aws:asset:path": "./src",
            "aws:asset:property": "Code"
          },
          "Properties": {
            "Code": {
                "S3Bucket": {
                    "Ref": "deploymentBucketName"
                },
                "S3Key": {
                    "Ref": "s3Key"
                }
            },
            "Handler": "index.handler",
            "FunctionName": {
                "Fn::If": [
                    "ShouldNotCreateEnvResources",
                    "addFeelingAndWordCloud",
                    {

                        "Fn::Join": [
                            "",
                            [
                                "addFeelingAndWordCloud",
                                "-",
                                {
                                    "Ref": "env"
                                }
                            ]
                        ]
                    }
                ]
            },
            "Environment": {
                "Variables" : {"ENV":{"Ref":"env"},"REGION":{"Ref":"AWS::Region"},"STORAGE_REVIEWS_NAME":{"Ref":"storagereviewsName"},"STORAGE_REVIEWS_ARN":{"Ref":"storagereviewsArn"},"STORAGE_REVIEWS_STREAMARN":{"Ref":"storagereviewsStreamArn"},"STORAGE_RESTAURANTS_NAME":{"Ref":"storagerestaurantsName"},"STORAGE_RESTAURANTS_ARN":{"Ref":"storagerestaurantsArn"},"STORAGE_RESTAURANTS_STREAMARN":{"Ref":"storagerestaurantsStreamArn"}}
            },
            "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"] },
            "Runtime": "python3.11",
            "Layers": [],
            "Timeout": 900
          }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "yelpaiLambdaRole231f0adf",
                        {

                            "Fn::Join": [
                                "",
                                [
                                    "yelpaiLambdaRole231f0adf",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        }
        ,"lambdaexecutionpolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "lambda-execution-policy",
                "Roles": [{ "Ref": "LambdaExecutionRole" }],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"],
                            "Resource": { "Fn::Sub": [ "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*", { "region": {"Ref": "AWS::Region"}, "account": {"Ref": "AWS::AccountId"}, "lambda": {"Ref": "LambdaFunction"}} ]}
                        }
                    ]
                }
            }
        }
        ,"AmplifyResourcesPolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "amplify-lambda-execution-policy",
                "Roles": [{ "Ref": "LambdaExecutionRole" }],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{"Effect":"Allow","Action":["dynamodb:Put*","dynamodb:Create*","dynamodb:BatchWriteItem","dynamodb:PartiQLInsert","dynamodb:Get*","dynamodb:BatchGetItem","dynamodb:List*","dynamodb:Describe*","dynamodb:Scan","dynamodb:Query","dynamodb:PartiQLSelect","dynamodb:Update*","dynamodb:RestoreTable*","dynamodb:PartiQLUpdate"],"Resource":[{"Ref":"storagereviewsArn"},{"Fn::Join":["/",[{"Ref":"storagereviewsArn"},"index/*"]]}]},{"Effect":"Allow","Action":["dynamodb:Put*","dynamodb:Create*","dynamodb:BatchWriteItem","dynamodb:PartiQLInsert","dynamodb:Get*","dynamodb:BatchGetItem","dynamodb:List*","dynamodb:Describe*","dynamodb:Scan","dynamodb:Query","dynamodb:PartiQLSelect","dynamodb:Update*","dynamodb:RestoreTable*","dynamodb:PartiQLUpdate"],"Resource":[{"Ref":"storagerestaurantsArn"},{"Fn::Join":["/",[{"Ref":"storagerestaurantsArn"},"index/*"]]}]}]
                }
            }
        }
        
        
        
        ,"CloudWatchEvent": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Schedule rule for Lambda",
                "ScheduleExpression": {
                    "Ref": "CloudWatchRule"
                },
                "State": "ENABLED",
                "Targets": [{
                    "Arn": { "Fn::GetAtt": ["LambdaFunction", "Arn"] },
                    "Id": {
                        "Ref": "LambdaFunction"
                    }
                }]
            }
        }
        ,"PermissionForEventsToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "LambdaFunction"
                    },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": { "Fn::GetAtt": ["CloudWatchEvent", "Arn"] }
            }
        },
        "LambdaExecutionRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "LambdaExecutionRolePolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeFunction"
                            ],
                            "Resource": "arn:aws:lambda:eu-west-1:442042535844:function:ServerlessHuggingFaceStack-main7AD10839-RRfiP2uoNupj"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "LambdaExecutionRole"
                    }
                ]
            }
        }
        
    },
    "Outputs": {
        "Name": {
            "Value": {
                "Ref": "LambdaFunction"
            }
        },
        "Arn": {
            "Value": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
        },
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "LambdaExecutionRole": {
            "Value": {
                "Ref": "LambdaExecutionRole"
            }
        }
        
        ,"CloudWatchEventRule": {
            "Value": {
                "Ref": "CloudWatchEvent"
            }
        }
        
    }
}
